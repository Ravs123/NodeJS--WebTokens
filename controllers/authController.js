//Here we create all the route functionallities and export each module to the 'authRoutes.js' file this way we can divide and control 

const User=require('../dataBase/userSchema')
const jwt=require('jsonwebtoken')
//Handling errors
const handleErr=(err)=>{
    console.log(err.message, err.code)
    let errorHandle={email:'',password:''}


    //incorrect email
    if(err.message==='this is a invalid email'){
        errorHandle.email='that email is not registered'
    }
    //incorrect password
    if(err.message==='this is incorrect password'){
        errorHandle.password='that password is incorrect'
    }
    


    //dublicate error validaition
    if(err.code === 11000){
        errorHandle.email='that email ID already exists'
        return errorHandle
    }
    //validations errors
    if(err.message.includes('user validation failed')){
        Object.values(err.errors).forEach(({properties})=>{
            errorHandle[properties.path]=properties.message
            
        })
    }
    return errorHandle;
}
const maxAge=3*24*60*60
//here we are creating and send a webtoken to server . later add this webtoken to the controllers
const createToken=(id)=>{//here the 'id' represents the autogenerated ID by mongoDB when new user is add
    return jwt.sign({id},'this my data',{
        expiresIn:maxAge
    })

}




module.exports.signUp_get=(req,res)=>{
    res.render('signup')
}

module.exports.login_get=(req,res)=>{
    res.render('login')
}

module.exports.signUp_post=async(req,res)=>{
    const {email,password}=req.body

    try {
     const userSignup = await User.create({email,password})
     const token=createToken(userSignup._id)//here we create a 'token' and insert our id in token
     //here we are creating a 'cookie' to store the 'token value'
     res.cookie('myCookie',token,{httpOnly:true,maxAge:maxAge*1000})
     res.status(201).json({userSignup:userSignup._id})
        
    } 
    
    catch (err) {
        const errors =handleErr(err)
        res.status(400).json({errors})
        
    }
    
}

module.exports.login_post=async(req,res)=>{
    const {email,password}=req.body
    
    try {//here we are using static function which is created in dbSchema 
        const user=await User.userLogin(email,password);
        const token=createToken(user._id)//here we create a 'token' and insert our id in token
     //here we are creating a 'cookie' to store the 'token value'
        res.cookie('myCookie',token,{httpOnly:true,maxAge:maxAge*1000})
        res.status(200).json({user:user._id})
    } catch (err) {
        const errors=handleErr(err)
        res.status(400).json({errors})
    }
}

module.exports.logout_get=(req,res)=>{
    res.cookie('myCookie',' ',{maxAge:1})
    res.redirect('/')
}
